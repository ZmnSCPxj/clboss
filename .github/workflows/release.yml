name: Create Release Tarballs

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up build tools
        run: |
          sudo apt-get install -y \
            build-essential \
            autoconf \
            autoconf-archive \
            automake \
            curl \
            libcurl4-openssl-dev \
            libunwind-dev \
            git \
            libev-dev \
            libtool \
            pkg-config \
            sqlite

      - name: Generate configure script
        run: autoreconf -fi

      - name: Run configure
        run: ./configure

      - name: Create .tar.gz source tarball
        run: make dist

      - name: Create .zip source tarball
        run: make dist-zip

      - name: List generated files for debugging
        run: ls -lah

      - name: Find .tar.gz file and set environment variable
        id: find_tarball
        run: |
          TARBALL_PATH=$(find . -name 'clboss-*.tar.gz')
          echo "TARBALL_PATH=$TARBALL_PATH" >> $GITHUB_ENV

      - name: Find .zip file and set environment variable
        id: find_zip
        run: |
          ZIP_PATH=$(find . -name 'clboss-*.zip')
          echo "ZIP_PATH=$ZIP_PATH" >> $GITHUB_ENV

      - name: Upload .tar.gz release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.TARBALL_PATH }}
          asset_name: clboss-${{ github.event.release.tag_name }}.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload .zip release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.ZIP_PATH }}
          asset_name: clboss-${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
